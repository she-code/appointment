name: Appointment app test
on:
  push:
    branches:
      - master
env:
  PG_DATABASE: "${{ secrets.POSTGRES_DB }}"
  PG_USER: "${{ secrets.POSTGRES_USER }}"
  PG_PASSWORD: "${{ secrets.POSTGRES_PASSWORD }}"
jobs:
  run-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: "postgres:11.7"
        env:
          POSTGRES_USER: "${{ secrets.POSTGRES_USER }}"
          POSTGRES_PASSWORD: "${{ secrets.POSTGRES_PASSWORD }}"
          POSTGRES_DB: "${{ secrets.POSTGRES_DB }}"
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s
          --health-retries 5
        ports:
          - "5432:5432"
    env:
      PORT: ${{ secrets.PORT }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
      CSURF_SECRET: ${{ secrets.CSURF_SECRET }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_PRODUCTION: ${{ secrets.DB_PRODUCTION }}
      DB_TEST: ${{ secrets.DB_TEST }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DEVELOPMENT_DB: ${{ secrets.DEVELOPMENT_DB }}
      HASH_NUMBER: ${{ secrets.HASH_NUMBER }}
      JWT_COOKIE_EXPIRES_IN: ${{ secrets.JWT_COOKIE_EXPIRES_IN }}
      JWT_EXPIRES_IN: ${{ secrets.JWT_EXPIRES_IN }}
      NODE_ENV: ${{ secrets.NODE_ENV }}
      STEPS_CONTEXT: ""
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Run build
        run: npm run build
      - name: Code Validation
        run: npm run lint
      - name: Run unit tests
        run: npm test
      - name: Run the app
        id: run-app
        run: |
          npx sequelize-cli db:drop
          npx sequelize-cli db:create
          npx sequelize-cli db:migrate
          PORT=5000 npm start &
          sleep 5
      - name: Run integration tests
        id: integration
        run: |
          npm install cypress cypress-json-results
          npx cypress run

      - name: Build production docker image
        uses: docker/build-push-action@v4
        run: |
          docker-compose -f docker-compose-prod.yml build

      - name: login to hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
